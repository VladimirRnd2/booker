<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zuzex.booker.mapper.UserMapper">
    
    <resultMap id="userResultMap" type="com.zuzex.booker.model.User">
        <id property="id" column="id"/>
        <result property="login" column="login"/>
        <result property="password" column="password"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="created" column="created"/>
        <result property="updated" column="updated"/>
        <result property="status" column="status"/>
        <association property="role" column="role_id" javaType="com.zuzex.booker.model.Role"
                     select="com.zuzex.booker.mapper.RoleMapper.findRoleById"/>
<!--        <association property="role" javaType="com.zuzex.booker.model.Role">-->
<!--            <id property="id" column="role_id" jdbcType="BIGINT"/>-->
<!--            <result property="name" column="name"/>-->
<!--        </association>-->
        <collection property="books" javaType="List" ofType="com.zuzex.booker.model.Book" column="id"
                    select="com.zuzex.booker.mapper.BookMapper.getBooksByUserId"/>
    </resultMap>

    <select id="findAllUsers" resultMap="userResultMap">
        select * from users;
    </select>

    <select id="findUserById" resultType="com.zuzex.booker.model.User" parameterType="Long">
        select * from users where id=#{id};
    </select>

    <select id="findUserByLogin" resultType="com.zuzex.booker.model.User" parameterType="String">
        select * from users where login = #{login};
    </select>

    <select id="getUsersByBookId" resultMap="userResultMap">
        select u.id, u.login, u.password, u.first_name, u.last_name, u.created, u.updated, u.status from users as u
        join users_books as ub on u.id = ub.user_id
        join books as b on ub.book_id = b.id
        where b.id = #{id};
    </select>

    <insert id="saveUser" useGeneratedKeys="true">
        insert into users (login,password,first_name,last_name,created,updated,status,role_id)
        values(#{login},#{password},#{firstName},#{lastName},#{created},#{updated},#{status},#{role.id}) returning id;
    </insert>

    <delete id="deleteUserById" parameterType="Long">
        delete from users where id=#{id};
    </delete>
</mapper>